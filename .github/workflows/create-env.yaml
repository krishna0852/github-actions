name: Create a Stage env


on:
    workflow_dispatch:
       inputs:
        PR_Number:
            description: 'Enter  PR number'
            required: true 




jobs:
    create-env:
        runs-on: ubuntu-latest
        permissions:
          id-token: write
          contents: read
        steps:
            - name: Verify the given PR number
              uses: actions/github-script@v7
              id: verify_pr_number
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                result-encoding: string
                script: |
                   const response = await github.rest.pulls.get({
                    
                   owner: context.repo.owner,
                   repo: context.repo.repo,
                   pull_number: ${{ github.event.inputs.PR_Number}}
                   
                   
                   });

                   // check if PR number is valid or not

                    if (response.data.number !== ${{ github.event.inputs.PR_number }}) {
                    throw new Error('Pull request is not open or number is not valid!');
                     }
                    else {
                      console.log("PR number is valid with PR ref: " + response.data.head.ref);
                      return response.data.head.ref;
                      }
            - name: Clone
              uses: actions/checkout@v2 

            
            - name: Terraform setup
              uses: hashicorp/setup-terraform@v3
              with:
               terraform_version: "1.6.3"

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                 role-to-assume: arn:aws:iam::730335449261:role/githubactions-pract
                 aws-region: us-east-1
                 audience: sts.amazonaws.com

            - name: Get credentials info
              run: |
                 aws sts get-caller-identity
                 aws s3 ls

            - name: create stage server
              id: create_resource_file
              working-directory: infra/instances/staging 
              run:  |
                OUTPUT="$((./create_staging_resource.sh PR_${{ github.event.inputs.PR_number }} | jq -r .terraform_expected_output))"
                echo "::set-output name=STAGING_RESOURCE_NAME::$OUTPUT"
              


                 
              


                    

